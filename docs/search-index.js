var N=null,E="",T="t",U="u",searchIndex={};
var R=["markov_chain","result","markov_chain::alg","try_from","borrow","type_id","typeid","borrow_mut","try_into","formatter","MarkovChain3"];

searchIndex[R[0]]={"doc":"A Markov chain is a stochastic model describing a sequenceâ€¦","i":[[3,R[10],R[0],"MarkovChain with three nodes",N,N],[0,"alg",E,"Algebra module for MarkovChains",N,N],[3,"Matrix3",R[2],"3x3 Square Matrix",N,N],[3,"Vec3",E,"Vector with 3 elements",N,N],[11,"new",E,"Construct a Matrix from a row major representation",0,N],[11,"new",E,"Construct a vector from an array",1,N],[11,"downcast",E,"Downcast the vector to an owned array",1,N],[11,"from",R[0],"Construct a Markov Chain",2,[[["matrix3"],["vec3"]],["self"]]],[11,"has_absorbing_state",E,"Check if the chain has an absorbing state",2,[[["self"]],["bool"]]],[11,"take_to",E,"Run the chain until to a step",2,[[["self"],["usize"]],["vec3"]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[["self"]],[U]]],[11,R[3],E,E,2,[[[U]],[R[1]]]],[11,R[4],E,E,2,[[["self"]],[T]]],[11,R[5],E,E,2,[[["self"]],[R[6]]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[1]]]],[11,"from",R[2],E,0,[[[T]],[T]]],[11,"into",E,E,0,[[["self"]],[U]]],[11,R[3],E,E,0,[[[U]],[R[1]]]],[11,R[4],E,E,0,[[["self"]],[T]]],[11,R[5],E,E,0,[[["self"]],[R[6]]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[1]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,"into",E,E,1,[[["self"]],[U]]],[11,"to_owned",E,E,1,[[["self"]],[T]]],[11,"clone_into",E,E,1,N],[11,R[3],E,E,1,[[[U]],[R[1]]]],[11,R[4],E,E,1,[[["self"]],[T]]],[11,R[5],E,E,1,[[["self"]],[R[6]]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[1]]]],[11,"eq",E,E,1,[[["self"],["vec3"]],["bool"]]],[11,"ne",E,E,1,[[["self"],["vec3"]],["bool"]]],[11,"clone",E,E,1,[[["self"]],["vec3"]]],[11,"mul",E,E,1,N],[11,"fmt",E,E,0,[[["self"],[R[9]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[9]]],[R[1]]]]],"p":[[3,"Matrix3"],[3,"Vec3"],[3,R[10]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);